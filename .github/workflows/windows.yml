on:
  push:
  pull_request:
  schedule:
    - cron: '13 11 * * *'
jobs:
  pythonbuild:
    runs-on: 'windows-2019'
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            C:/Rust/.cargo/registry
            C:/Rust/.cargo/git
            target
          key: ${{ runner.os }}-pythonbuild-${{ hashFiles('Cargo.lock') }}

      - name: Build
        run: |
          cargo build --release

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: pythonbuild
          path: target/release/pythonbuild.exe

  build:
    strategy:
      fail-fast: false
      matrix:
        py:
          - 'cpython-3.8'
          - 'cpython-3.9'
          - 'cpython-3.10'
        vcvars:
          - 'vcvars32.bat'
          - 'vcvars64.bat'
        profile:
          - 'static-noopt'
          - 'shared-pgo'
    needs: pythonbuild
    runs-on: 'windows-2019'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Cygwin
        uses: egor-tensin/setup-cygwin@f86ccb21e7a2ba792c837fb9a2b267a9d6335531
        with:
          platform: x64
          packages: autoconf automake libtool

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Download pythonbuild Executable
        uses: actions/download-artifact@v2
        with:
          name: pythonbuild

      # We need to do this before we activate the VC++ environment or else binary packages
      # don't get compiled properly.
      - name: Bootstrap Python environment
        run: |
          py.exe -3.9 build-windows.py --help

      - name: Build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\${{ matrix.vcvars }}"
          py.exe -3.9 build-windows.py --python ${{ matrix.py }} --sh c:\tools\cygwin\bin\sh.exe --profile ${{ matrix.profile }}

      - name: Validate Distribution
        run: |
          $Dists = Resolve-Path -Path "dist/*.tar.zst" -Relative
          .\pythonbuild.exe validate-distribution --run $Dists

      - name: Upload Distributions
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.py }}-${{ matrix.vcvars }}
          path: dist/*
